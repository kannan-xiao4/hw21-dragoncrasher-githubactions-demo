# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Move config file
        run: |
          pwd
          ls
          mkdir -p /usr/share/unity3d/config
          mv ./services-config.json /usr/share/unity3d/config/services-config.json

      # Setup Unity using actions
      - name: Setup Unity
        id: setup-unity
        uses: kuler90/setup-unity@v1.0.7
        with:
          project-path: ${{ github.workspace }}/DragonCrasher

      # Output
      - name: Print output
        run: |
          echo unity-version: ${{ steps.setup-unity.outputs.unity-version }}
          echo unity-path: ${{ steps.setup-unity.outputs.unity-path }}
          echo env UNITY_PATH: ${{ env.UNITY_PATH }}
      
      - name: Build Player
        run: |
          ${{ env.UNITY_PATH }} -quit -batchmode -projectPath ${{ github.workspace }}/DragonCrasher -buildLinux64Player  ${{ github.workspace }}/DragonCrasher/build

      - name: Archive build player results
        uses: actions/upload-artifact@v2
        with:
          name: buildplayer
          path: ${{ github.workspace }}/DragonCrasher/build

  # macos:
  #   runs-on: macos-latest
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     # Setup Unity using actions
  #     - name: Setup Unity
  #       id: setup-unity
  #       uses: kuler90/setup-unity@v1.0.7
  #       with:
  #         project-path: ${{ github.workspace }}/DragonCrasher

  #     # Output
  #     - name: Print output
  #       run: |
  #         echo unity-version: ${{ steps.setup-unity.outputs.unity-version }}
  #         echo unity-path: ${{ steps.setup-unity.outputs.unity-path }}
  #         echo env UNITY_PATH: ${{ env.UNITY_PATH }}

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     # Setup Unity using actions
  #     - name: Setup Unity
  #       id: setup-unity
  #       uses: kuler90/setup-unity@v1.0.7
  #       with:
  #         project-path: ${{ github.workspace }}\DragonCrasher

  #     # Output
  #     - name: Print output
  #       run: |
  #         echo unity-version: ${{ steps.setup-unity.outputs.unity-version }}
  #         echo unity-path: ${{ steps.setup-unity.outputs.unity-path }}
  #         echo env UNITY_PATH: ${{ env.UNITY_PATH }}
